Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]

class Solution {
public:
    
    vector<int> topKFrequent(vector<int>& a, int k) {
      unordered_map<int,int>m;
        int n=a.size();
        vector<int>v;
        for(int i=0;i<n;i++){
            m[a[i]]++;
            }
        
        priority_queue<pair<int,int>>pq;
        for(auto it =m.begin(); it!=m.end();it++){
           // if(m[i]!=0)
            pq.push({it->second,it->first});
        }
        while(k>0){
            v.push_back(pq.top().second);
            pq.pop();
            k--;
        }
        return v;
        
        
        
        
    }
};



class Solution {
public:

static bool cmp(pair<int,int>&a ,pair<int,int>&b){
return a.second>b.second;
}
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>m;
        int n=nums.size();
        for(auto i:nums)
        {
            m[i]++;
        }
        vector<int>ans;
        vector<pair<int,int>>v(m.begin(),m.end());
        sort(v.begin(),v.end(),cmp);
        for (int i=0;i<k;i++){
        ans.push_back(v[i].first);
    }
    
    
  return ans;  

        
        
    }
};
